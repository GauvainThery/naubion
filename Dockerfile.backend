# Backend Dockerfile for Naubion Monorepo
FROM node:lts-alpine AS base

# Install pnpm globally (only once)
RUN corepack enable && corepack prepare pnpm@latest --activate

# Install Chromium and dependencies for Puppeteer
RUN apk add --no-cache \
      chromium \
      nss \
      freetype \
      freetype-dev \
      harfbuzz \
      ca-certificates \
      ttf-freefont \
      && rm -rf /var/cache/apk/*

# Dependencies stage
FROM base AS deps
WORKDIR /app

# Copy package files for the monorepo
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/backend/package.json ./apps/backend/
COPY libs/shared/package.json ./libs/shared/

# Install dependencies
RUN pnpm install --frozen-lockfile --prod=false

# Builder stage
FROM base AS builder
WORKDIR /app

# Copy source code and package files
COPY libs/shared ./libs/shared
COPY apps/backend ./apps/backend
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Copy node_modules from deps stage and ensure workspace linking
COPY --from=deps /app/node_modules ./node_modules

# Ensure workspace dependencies are properly linked
RUN pnpm install --frozen-lockfile --offline

# Build shared library first
RUN pnpm --filter "@naubion/shared" build

# Build backend
RUN pnpm --filter "@naubion/backend" build

# Production stage
FROM base AS production
WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 naubion

# Copy built applications and their dependencies from builder stage
COPY --from=builder --chown=naubion:nodejs /app/apps/backend/dist ./apps/backend/dist
COPY --from=builder --chown=naubion:nodejs /app/libs/shared/dist ./libs/shared/dist
COPY --from=builder --chown=naubion:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=naubion:nodejs /app/package.json ./package.json

# Switch to non-root user
USER naubion

# Set Puppeteer executable path
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node apps/backend/dist/healthcheck.js

# Start the application
CMD ["node", "apps/backend/dist/app.js"]
